version: '3.8'

services:
  # ===================== 数据库服务 =====================
  mysql:
    image: mysql:8.0
    container_name: bagua-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d:ro
    networks:
      - bagua-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s

  # ===================== Redis服务 =====================
  redis:
    image: redis:7-alpine
    container_name: bagua-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    environment:
      TZ: Asia/Shanghai
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - bagua-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s

  # ===================== 后端服务 =====================
  backend:
    image: bagua-backend:test
    container_name: bagua-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - TZ=Asia/Shanghai
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WECHAT_APP_ID=${WECHAT_APP_ID}
      - WECHAT_APP_SECRET=${WECHAT_APP_SECRET}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_URL=${DEEPSEEK_API_URL}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL}
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - bagua-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ===================== 前端服务 =====================
  frontend:
    image: bagua-frontend:test
    container_name: bagua-frontend
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - bagua-network
    depends_on:
      - backend

# ===================== 数据卷 =====================
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# ===================== 网络 =====================
networks:
  bagua-network:
    driver: bridge
