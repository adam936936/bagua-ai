version: '3.8'

services:
  # MySQL数据库 - 生产环境
  mysql-prod:
    image: mysql:8.0
    container_name: bagua-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-fortune_db}
      MYSQL_USER: ${MYSQL_USERNAME:-fortune_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/src/main/resources/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/logs:/var/log/mysql
    command: --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=512M
      --innodb-log-file-size=256M
      --innodb-flush-log-at-trx-commit=1
      --sync-binlog=1
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    networks:
      - fortune-prod-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 30s

  # Redis缓存 - 生产环境
  redis-prod:
    image: redis:7-alpine
    container_name: bagua-redis-prod
    restart: unless-stopped
    command: |
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_prod_data:/data
      - ./redis/logs:/var/log/redis
    networks:
      - fortune-prod-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      timeout: 20s
      retries: 5
      interval: 30s

  # 后端应用 - 生产环境
  backend-prod:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: bagua-backend-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"  # 管理端点端口
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - MYSQL_HOST=mysql-prod
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-fortune_db}
      - MYSQL_USERNAME=${MYSQL_USERNAME:-fortune_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis-prod
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - WECHAT_APP_ID=${WECHAT_APP_ID}
      - WECHAT_APP_SECRET=${WECHAT_APP_SECRET}
      - WECHAT_PAY_APP_ID=${WECHAT_PAY_APP_ID:-}
      - WECHAT_PAY_MCH_ID=${WECHAT_PAY_MCH_ID:-}
      - WECHAT_PAY_API_KEY=${WECHAT_PAY_API_KEY:-}
      - WECHAT_PAY_NOTIFY_URL=${WECHAT_PAY_NOTIFY_URL:-}
      - JAVA_OPTS=-Xms1024m -Xmx2048m -XX:+UseG1GC -XX:MaxGCPauseMillis=200
    depends_on:
      mysql-prod:
        condition: service_healthy
      redis-prod:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - fortune-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 5m

  # Nginx反向代理 - 生产环境
  nginx-prod:
    image: nginx:1.25-alpine
    container_name: bagua-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - ./static:/usr/share/nginx/html
    depends_on:
      - backend-prod
    networks:
      - fortune-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  fortune-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 